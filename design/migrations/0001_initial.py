# Generated by Django 3.2 on 2022-09-30 06:33

import design.models
from django.db import migrations, models
import django.db.models.deletion
import stair_detailed.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ModelConstructionData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "remark_name",
                    models.CharField(
                        default=design.models.get_default_remark_name,
                        max_length=64,
                        null=True,
                        verbose_name="别名",
                    ),
                ),
                (
                    "rebar_name",
                    models.CharField(
                        choices=[
                            ["HPB300", "HPB300"],
                            ["HRB335", "HRB335"],
                            ["HRBF335", "HRBF335"],
                            ["HRB400", "HRB400"],
                            ["HRBF400", "HRBF400"],
                            ["RRB400", "RRB400"],
                            ["HRB500", "HRB500"],
                            ["HRBF500", "HRBF500"],
                        ],
                        default="HPB300",
                        max_length=32,
                        verbose_name="钢筋等级",
                    ),
                ),
                (
                    "concrete_grade",
                    models.IntegerField(
                        choices=[
                            [30, "C30"],
                            [35, "C35"],
                            [40, "C40"],
                            [45, "C45"],
                            [50, "C50"],
                        ],
                        default=30,
                        verbose_name="混凝土等级",
                    ),
                ),
                (
                    "protective_layer_thickness",
                    models.IntegerField(default=20, verbose_name="保护层厚度 mm"),
                ),
                (
                    "longitudinal_top_stress_bar_margin",
                    models.IntegerField(default=20, verbose_name="纵顶受力钢筋边距 mm"),
                ),
                ("height", models.IntegerField(null=True, verbose_name="楼梯高度 mm")),
                ("thickness", models.IntegerField(null=True, verbose_name="梯段板厚度 mm")),
                ("weight", models.IntegerField(null=True, verbose_name="梯段板宽度 mm")),
                ("clear_span", models.IntegerField(null=True, verbose_name="净跨 mm")),
                (
                    "top_top_length",
                    models.IntegerField(null=True, verbose_name="顶端上边长 mm"),
                ),
                (
                    "bottom_top_length",
                    models.IntegerField(null=True, verbose_name="底端上边长 mm"),
                ),
                ("steps_number", models.IntegerField(null=True, verbose_name="踏步数 N")),
                ("live_load", models.FloatField(null=True, verbose_name="可变荷载 kN/m^2")),
                (
                    "railing_load",
                    models.FloatField(null=True, verbose_name="栏杆荷载 kN/m"),
                ),
                (
                    "permanent_load_partial_factor",
                    models.FloatField(null=True, verbose_name="永久荷载分项系数"),
                ),
                (
                    "live_load_load_partial_factor",
                    models.FloatField(null=True, verbose_name="可变荷载分项系数"),
                ),
                (
                    "quasi_permanent_value_coefficient",
                    models.FloatField(null=True, verbose_name="准永久值系数"),
                ),
                (
                    "combined_value_coefficient",
                    models.FloatField(null=True, verbose_name="组合值系数"),
                ),
                (
                    "reinforced_concrete_bulk_density",
                    models.FloatField(null=True, verbose_name="钢筋混凝土容重 kN/m^3"),
                ),
                ("crack", models.FloatField(null=True, verbose_name="裂缝限制 mm")),
            ],
            options={
                "verbose_name": "结构设计参数",
                "verbose_name_plural": "结构设计参数",
            },
        ),
        migrations.CreateModel(
            name="ModelDetailedResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("top_bottom_length", models.FloatField(verbose_name="顶端下边长 mm")),
                ("bottom_bottom_length", models.FloatField(verbose_name="底端下边长 mm")),
                ("l0", models.IntegerField(verbose_name="计算跨度 mm")),
                ("h0", models.IntegerField(verbose_name="楼梯总高度 mm")),
                ("v", models.IntegerField(verbose_name="计算体积")),
                ("cos", models.FloatField(verbose_name="梯段板与水平方向夹角余弦值")),
                ("sin", models.FloatField(verbose_name="梯段板与水平方向夹角正弦值")),
                ("tan", models.FloatField(verbose_name="梯段板与水平方向夹角正切值")),
                ("gkt", models.FloatField(verbose_name="自重 kN/m")),
                ("gk", models.FloatField(verbose_name="恒荷标准值 kN/m")),
                ("gdk", models.FloatField(verbose_name="吊装预埋件自重标准值乘以动力系数 kN/m")),
                ("gek", models.FloatField(verbose_name="脱模预埋件自重标准值乘以动力系数 kN/m")),
                ("single_capacity_hosit", models.FloatField(verbose_name="受压区高度 /mm")),
                (
                    "hoist_type",
                    models.IntegerField(
                        choices=[(1, "ANCHOR"), (0, "ROUNDING_HEAD")],
                        default=1,
                        verbose_name="吊装预埋件类型",
                    ),
                ),
                ("hoist_name", models.CharField(max_length=128, verbose_name="吊装件型号")),
                (
                    "hoist_parameter_anchor_parameter_type",
                    models.CharField(max_length=64, verbose_name="类型"),
                ),
                (
                    "hoist_parameter_anchor_parameter_factory",
                    models.CharField(max_length=64, verbose_name="系列名"),
                ),
                (
                    "hoist_parameter_anchor_parameter_name",
                    models.CharField(max_length=64, verbose_name="名称"),
                ),
                (
                    "hoist_parameter_anchor_parameter_abbreviation",
                    models.CharField(max_length=64, verbose_name="前缀编号"),
                ),
                (
                    "hoist_parameter_anchor_parameter_capacity",
                    models.FloatField(blank=True, null=True, verbose_name="承载力"),
                ),
                (
                    "hoist_parameter_anchor_parameter_m_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="接口直径"),
                ),
                (
                    "hoist_parameter_anchor_parameter_m_length",
                    models.FloatField(blank=True, null=True, verbose_name="埋入深度"),
                ),
                (
                    "hoist_parameter_anchor_parameter_anchor_name",
                    models.CharField(max_length=64, verbose_name="锚栓螺纹"),
                ),
                (
                    "hoist_parameter_anchor_parameter_e_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="嵌入直径"),
                ),
                (
                    "hoist_parameter_anchor_parameter_g",
                    models.FloatField(blank=True, null=True, verbose_name="嵌入长度"),
                ),
                (
                    "hoist_parameter_anchor_parameter_b",
                    models.FloatField(blank=True, null=True, verbose_name="嵌入箭头长度"),
                ),
                (
                    "hoist_parameter_anchor_parameter_o_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="锚栓直径"),
                ),
                (
                    "hoist_parameter_anchor_parameter_length",
                    models.FloatField(blank=True, null=True, verbose_name="锚栓长度"),
                ),
                (
                    "hoist_parameter_anchor_parameter_s_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="卡槽直径"),
                ),
                (
                    "hoist_parameter_anchor_parameter_l_p",
                    models.FloatField(blank=True, null=True, verbose_name="卡槽长度"),
                ),
                (
                    "hoist_parameter_anchor_parameter_a",
                    models.FloatField(blank=True, null=True, verbose_name="卡槽边距"),
                ),
                (
                    "hoist_parameter_round_head_parameter_type",
                    models.CharField(max_length=64, verbose_name="类型"),
                ),
                (
                    "hoist_parameter_round_head_parameter_factory",
                    models.CharField(max_length=64, verbose_name="系列名"),
                ),
                (
                    "hoist_parameter_round_head_parameter_name",
                    models.CharField(max_length=64, verbose_name="名称"),
                ),
                (
                    "hoist_parameter_round_head_parameter_abbreviation",
                    models.CharField(max_length=64, verbose_name="编号前缀"),
                ),
                (
                    "hoist_parameter_round_head_parameter_capacity",
                    models.FloatField(blank=True, null=True, verbose_name="承载力"),
                ),
                (
                    "hoist_parameter_round_head_parameter_length",
                    models.FloatField(blank=True, null=True, verbose_name="吊钉长度"),
                ),
                (
                    "hoist_parameter_round_head_parameter_top_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="顶部直径"),
                ),
                (
                    "hoist_parameter_round_head_parameter_top_height",
                    models.FloatField(blank=True, null=True, verbose_name="顶部高度"),
                ),
                (
                    "hoist_parameter_round_head_parameter_top_adjacent_height",
                    models.FloatField(blank=True, null=True, verbose_name="顶部连接高度"),
                ),
                (
                    "hoist_parameter_round_head_parameter_middle_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="中间直径"),
                ),
                (
                    "hoist_parameter_round_head_parameter_middle_height",
                    models.FloatField(blank=True, null=True, verbose_name="中间高度"),
                ),
                (
                    "hoist_parameter_round_head_parameter_bottom_adjacent_height",
                    models.FloatField(blank=True, null=True, verbose_name="底部连接高度"),
                ),
                (
                    "hoist_parameter_round_head_parameter_bottom_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="底部半径"),
                ),
                (
                    "hoist_parameter_round_head_parameter_bottom_height",
                    models.FloatField(blank=True, null=True, verbose_name="底部高度"),
                ),
                (
                    "hoist_parameter_round_head_parameter_radius",
                    models.FloatField(blank=True, null=True, verbose_name="埋入半径"),
                ),
                ("hoist_edge_xa", models.FloatField(verbose_name="hoist_edge_xa")),
                ("hoist_edge_xb", models.FloatField(verbose_name="hoist_edge_xb")),
                ("hoist_edge_xc", models.FloatField(verbose_name="hoist_edge_xc")),
                ("m_hoist_ka", models.FloatField(verbose_name="m_hoist_ka")),
                ("m_hoist_kb", models.FloatField(verbose_name="m_hoist_kb")),
                ("w_hoist_a", models.FloatField(verbose_name="w_hoist_a")),
                ("w_hoist_b", models.FloatField(verbose_name="w_hoist_b")),
                ("sigm_hoist_cka", models.FloatField(verbose_name="sigm_hoist_cka")),
                ("sigm_hoist_ckb", models.FloatField(verbose_name="sigm_hoist_ckb")),
                ("max_sigm", models.FloatField(verbose_name="max_sigm")),
                ("hoist_f_tk", models.FloatField(verbose_name="host_f_tk")),
                (
                    "pouring_way",
                    models.IntegerField(
                        choices=[(0, "立式浇筑式脱模"), (1, "立式浇筑立式脱模"), (2, "卧式浇筑卧式脱模")],
                        default=0,
                        verbose_name="浇筑形式",
                    ),
                ),
                ("q_k1", models.FloatField(verbose_name="q_k1")),
                ("single_capacity_demold", models.FloatField(verbose_name="脱模预埋件单承载")),
                (
                    "demold_type",
                    models.IntegerField(
                        choices=[(0, "ROUNDING_HEAD"), (1, "ANCHOR"), (2, "LIFT_HOOK")],
                        default=0,
                        verbose_name="吊装预埋件类型",
                    ),
                ),
                ("demold_name", models.CharField(max_length=64, verbose_name="吊装件型号")),
                (
                    "demold_parameter_anchor_parameter_type",
                    models.CharField(max_length=64, verbose_name="类型"),
                ),
                (
                    "demold_parameter_anchor_parameter_factory",
                    models.CharField(max_length=64, verbose_name="系列名"),
                ),
                (
                    "demold_parameter_anchor_parameter_name",
                    models.CharField(max_length=64, verbose_name="名称"),
                ),
                (
                    "demold_parameter_anchor_parameter_abbreviation",
                    models.CharField(max_length=64, verbose_name="前缀编号"),
                ),
                (
                    "demold_parameter_anchor_parameter_capacity",
                    models.FloatField(blank=True, null=True, verbose_name="承载力"),
                ),
                (
                    "demold_parameter_anchor_parameter_m_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="接口直径"),
                ),
                (
                    "demold_parameter_anchor_parameter_m_length",
                    models.FloatField(blank=True, null=True, verbose_name="埋入深度"),
                ),
                (
                    "demold_parameter_anchor_parameter_anchor_name",
                    models.CharField(max_length=64, verbose_name="锚栓螺纹"),
                ),
                (
                    "demold_parameter_anchor_parameter_e_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="嵌入直径"),
                ),
                (
                    "demold_parameter_anchor_parameter_g",
                    models.FloatField(blank=True, null=True, verbose_name="嵌入长度"),
                ),
                (
                    "demold_parameter_anchor_parameter_b",
                    models.FloatField(blank=True, null=True, verbose_name="嵌入箭头长度"),
                ),
                (
                    "demold_parameter_anchor_parameter_o_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="锚栓直径"),
                ),
                (
                    "demold_parameter_anchor_parameter_length",
                    models.FloatField(blank=True, null=True, verbose_name="锚栓长度"),
                ),
                (
                    "demold_parameter_anchor_parameter_s_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="卡槽直径"),
                ),
                (
                    "demold_parameter_anchor_parameter_l_p",
                    models.FloatField(blank=True, null=True, verbose_name="卡槽长度"),
                ),
                (
                    "demold_parameter_anchor_parameter_a",
                    models.FloatField(blank=True, null=True, verbose_name="卡槽边距"),
                ),
                (
                    "demold_parameter_round_head_parameter_type",
                    models.CharField(max_length=64, verbose_name="类型"),
                ),
                (
                    "demold_parameter_round_head_parameter_factory",
                    models.CharField(max_length=64, verbose_name="系列名"),
                ),
                (
                    "demold_parameter_round_head_parameter_name",
                    models.CharField(max_length=64, verbose_name="名称"),
                ),
                (
                    "demold_parameter_round_head_parameter_abbreviation",
                    models.CharField(max_length=64, verbose_name="编号前缀"),
                ),
                (
                    "demold_parameter_round_head_parameter_capacity",
                    models.FloatField(blank=True, null=True, verbose_name="承载力"),
                ),
                (
                    "demold_parameter_round_head_parameter_length",
                    models.FloatField(blank=True, null=True, verbose_name="吊钉长度"),
                ),
                (
                    "demold_parameter_round_head_parameter_top_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="顶部直径"),
                ),
                (
                    "demold_parameter_round_head_parameter_top_height",
                    models.FloatField(blank=True, null=True, verbose_name="顶部高度"),
                ),
                (
                    "demold_parameter_round_head_parameter_top_adjacent_height",
                    models.FloatField(blank=True, null=True, verbose_name="顶部连接高度"),
                ),
                (
                    "demold_parameter_round_head_parameter_middle_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="中间直径"),
                ),
                (
                    "demold_parameter_round_head_parameter_middle_height",
                    models.FloatField(blank=True, null=True, verbose_name="中间高度"),
                ),
                (
                    "demold_parameter_round_head_parameter_bottom_adjacent_height",
                    models.FloatField(blank=True, null=True, verbose_name="底部连接高度"),
                ),
                (
                    "demold_parameter_round_head_parameter_bottom_diameter",
                    models.FloatField(blank=True, null=True, verbose_name="底部半径"),
                ),
                (
                    "demold_parameter_round_head_parameter_bottom_height",
                    models.FloatField(blank=True, null=True, verbose_name="底部高度"),
                ),
                (
                    "demold_parameter_round_head_parameter_radius",
                    models.FloatField(blank=True, null=True, verbose_name="埋入半径"),
                ),
                (
                    "rail_parameter_name",
                    models.CharField(max_length=64, verbose_name="name"),
                ),
                ("rail_parameter_a", models.IntegerField(verbose_name="a")),
                ("rail_parameter_b", models.IntegerField(verbose_name="b")),
                ("rail_parameter_c", models.IntegerField(verbose_name="c")),
                ("rail_parameter_d", models.IntegerField(verbose_name="d")),
                ("rail_parameter_t", models.IntegerField(verbose_name="t")),
                ("rail_parameter_fi", models.IntegerField(verbose_name="直径")),
                ("rail_parameter_depth", models.IntegerField(verbose_name="栏杆埋入深度")),
                ("rail_parameter_length", models.IntegerField(verbose_name="底边长度")),
                (
                    "stair",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="design.modelconstructiondata",
                        verbose_name="结构参数",
                    ),
                ),
            ],
            options={
                "verbose_name": "深化设计结果",
                "verbose_name_plural": "深化设计结果",
            },
        ),
        migrations.CreateModel(
            name="ModelConstructionResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("steps_h", models.FloatField(null=True, verbose_name="踏步高度 mm")),
                ("steps_b", models.FloatField(null=True, verbose_name="踏步宽度 mm")),
                ("l0", models.IntegerField(null=True, verbose_name="计算跨度 mm")),
                ("cos", models.FloatField(null=True, verbose_name="梯段板与水平方向夹角余弦值")),
                ("gkt", models.FloatField(null=True, verbose_name="自重 kN/m")),
                ("gk", models.FloatField(null=True, verbose_name="恒荷标准值 kN/m")),
                ("png", models.FloatField(null=True, verbose_name="Pn(G) 恒荷控制 kN/m")),
                ("pnl", models.FloatField(null=True, verbose_name="Pn(L) 活荷控制 kN/m")),
                ("pm", models.FloatField(null=True, verbose_name="Pm 荷载设计值kN/m")),
                ("m_max", models.FloatField(null=True, verbose_name="截面最大弯矩 kN*m")),
                ("h0", models.FloatField(null=True, verbose_name="受压区高度 /mm")),
                ("alpha_s", models.FloatField(null=True, verbose_name="alpha_s")),
                ("ksi", models.FloatField(null=True, verbose_name="相对受压区高度变换系数ξ")),
                (
                    "ksi_status",
                    models.BooleanField(
                        default=False,
                        null=True,
                        verbose_name="状态 ξ相对于ξb | 界限相对受压区高度变换系数",
                    ),
                ),
                (
                    "p_c_min",
                    models.FloatField(null=True, verbose_name="纵向受力钢筋最小配筋率 ρmin"),
                ),
                ("p_c", models.FloatField(null=True, verbose_name="受弯承载力计算配筋率")),
                (
                    "as_1",
                    models.FloatField(null=True, verbose_name="受弯承载力配筋计算面积  As /mm^2"),
                ),
                (
                    "as_2",
                    models.FloatField(null=True, verbose_name="上部纵筋按构造配筋的计算面积 mm^2"),
                ),
                (
                    "as_3",
                    models.FloatField(
                        null=True, verbose_name="分布钢筋按照单向板的最小配筋率进行计算 /mm^2"
                    ),
                ),
                (
                    "as_fact_1",
                    models.FloatField(null=True, verbose_name="受弯承载力配筋实际面积  As /mm^2"),
                ),
                (
                    "as_fact_2",
                    models.FloatField(null=True, verbose_name="上部纵筋按构造配筋的实际面积 mm^2"),
                ),
                (
                    "as_fact_3",
                    models.FloatField(null=True, verbose_name="分布钢筋实际面积 /mm^2"),
                ),
                (
                    "d_fact_1",
                    models.FloatField(null=True, verbose_name="受弯承载力钢筋直径  d /mm"),
                ),
                (
                    "d_fact_2",
                    models.FloatField(null=True, verbose_name="上部纵筋钢筋直径 d /mm"),
                ),
                (
                    "d_fact_3",
                    models.FloatField(null=True, verbose_name="分布钢筋直径  d /mm"),
                ),
                (
                    "spacing_fact_1",
                    models.IntegerField(
                        null=True, verbose_name="受弯承载力钢筋间距  spacing /mm"
                    ),
                ),
                (
                    "spacing_fact_2",
                    models.IntegerField(
                        null=True, verbose_name="上部纵筋钢筋钢筋间距  spacing /mm"
                    ),
                ),
                (
                    "spacing_fact_3",
                    models.IntegerField(null=True, verbose_name="分布钢筋间距  spacing /mm"),
                ),
                ("mq", models.FloatField(null=True, verbose_name="永久组合弯矩值Mq kN*m")),
                (
                    "sigma_sq",
                    models.FloatField(null=True, verbose_name="纵向受拉钢筋的应力 sq N/mm"),
                ),
                ("a_te", models.FloatField(null=True, verbose_name="矩形截面面积 mm^2")),
                ("p_te", models.FloatField(null=True, verbose_name="矩形截面配筋率 ρte")),
                ("fi_i", models.FloatField(null=True, verbose_name="钢筋应变不均匀系数φq")),
                ("fi", models.FloatField(null=True, verbose_name="调整后钢筋应变不均匀系数φq")),
                (
                    "alpha_e",
                    models.FloatField(null=True, verbose_name="钢筋弹性模量与混凝土弹性模量比值"),
                ),
                (
                    "gama_f",
                    models.FloatField(null=True, verbose_name="受压翼缘面积与腹板有效面积比值 γf"),
                ),
                ("p_t", models.FloatField(null=True, verbose_name="纵向受拉钢筋配筋率ρ")),
                (
                    "b_s",
                    models.FloatField(null=True, verbose_name="受弯构件的短期刚度 Bsq N*mm^2"),
                ),
                ("b_l", models.FloatField(null=True, verbose_name="受弯构件长期刚度B  N*mm^2")),
                (
                    "theta",
                    models.FloatField(
                        null=True, verbose_name="考虑荷载长期效应组合对挠度影响增大影响系数 θ"
                    ),
                ),
                (
                    "m_theta",
                    models.FloatField(null=True, verbose_name="受压钢筋面积与受拉钢筋面积比值"),
                ),
                (
                    "deflection_maxk",
                    models.FloatField(null=True, verbose_name="受弯构件挠度"),
                ),
                (
                    "deflection_limit",
                    models.FloatField(null=True, verbose_name="挠度限值 mm"),
                ),
                (
                    "deflection_status",
                    models.BooleanField(
                        default=False,
                        help_text="挠度验算结果,False 表示未通过",
                        null=True,
                        verbose_name="是否满足挠度规范要求",
                    ),
                ),
                ("fi_w_i", models.FloatField(null=True, verbose_name="钢筋应变不均匀系数φq")),
                ("fi_w", models.FloatField(null=True, verbose_name="钢筋应变不均匀系数φq")),
                ("v_i", models.FloatField(null=True, verbose_name="是否带肋钢筋决定 Vi")),
                ("rebar_n", models.IntegerField(null=True, verbose_name="单位面积钢筋根数")),
                (
                    "c_s",
                    models.IntegerField(
                        null=True, verbose_name="最外层纵向受拉钢筋外边缘至受拉区底边的距离"
                    ),
                ),
                (
                    "p_te_w",
                    models.FloatField(null=True, verbose_name="裂缝验算矩形截面配筋率 ρte"),
                ),
                (
                    "d_eq",
                    models.FloatField(null=True, verbose_name="受拉区纵筋的等效直径 deq mm"),
                ),
                ("crack_max", models.FloatField(null=True, verbose_name="受弯构件挠度  mm")),
                (
                    "crack_status",
                    models.BooleanField(
                        default=False, null=True, verbose_name="是否满足挠度规范要求"
                    ),
                ),
                (
                    "success",
                    models.BooleanField(
                        default=False, help_text="调用计算的状态", verbose_name="计算状态"
                    ),
                ),
                (
                    "message",
                    models.CharField(
                        blank=True,
                        help_text="错误原因",
                        max_length=256,
                        null=True,
                        verbose_name="错误原因",
                    ),
                ),
                (
                    "construction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="design.modelconstructiondata",
                        verbose_name="关联参数",
                    ),
                ),
            ],
            options={
                "verbose_name": "结构计算结果",
                "verbose_name_plural": "结构计算结果",
            },
        ),
        migrations.CreateModel(
            name="DetailData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("width", models.IntegerField(default=1270, verbose_name="梯段板宽度 mm")),
                (
                    "top_to_length",
                    models.IntegerField(default=400, verbose_name="顶端上边长 mm"),
                ),
                (
                    "top_thickness",
                    models.IntegerField(default=200, verbose_name="顶端板厚 mm"),
                ),
                ("top_b", models.IntegerField(default=80, verbose_name="顶端挑耳宽度 mm")),
                (
                    "bottom_top_length",
                    models.IntegerField(default=400, verbose_name="底端上边长 mm"),
                ),
                (
                    "bottom_thickness",
                    models.IntegerField(default=200, verbose_name="底端板厚 mm"),
                ),
                ("bottom_b", models.IntegerField(default=0, verbose_name="底端挑耳宽度 mm")),
                (
                    "hole_design_mode",
                    models.IntegerField(
                        choices=[(0, "自动"), (1, "手动")],
                        default=0,
                        verbose_name="hole_design_mode",
                    ),
                ),
                (
                    "joint_design_mode",
                    models.IntegerField(
                        choices=[(0, "自动"), (1, "手动")],
                        default=1,
                        verbose_name="joint_design_mode",
                    ),
                ),
                (
                    "step_slot_design_mode",
                    models.IntegerField(
                        choices=[(0, "自动"), (1, "手动")],
                        default=1,
                        verbose_name="step_slot_design_mode",
                    ),
                ),
                (
                    "water_drip_design_mode",
                    models.IntegerField(
                        choices=[(1, "手动"), (2, "No")],
                        default=1,
                        verbose_name="water_drip_design_mode",
                    ),
                ),
                (
                    "top_hole_type",
                    models.IntegerField(
                        choices=[(0, "固定铰支座"), (1, "滑动铰支座")],
                        default=0,
                        verbose_name="顶端孔洞类型",
                    ),
                ),
                (
                    "top_fix_hinge_c1",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="fix_hinge_c1"
                    ),
                ),
                (
                    "top_fix_hinge_d1",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="fix_hinge_d1"
                    ),
                ),
                (
                    "top_fix_hinge_e1",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="fix_hinge_e1"
                    ),
                ),
                (
                    "top_fix_hinge_f1",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="fix_hinge_f1"
                    ),
                ),
                (
                    "top_fix_hinge_h1",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="fix_hinge_h1"
                    ),
                ),
                (
                    "top_sliding_hinge_c2",
                    models.IntegerField(blank=True, null=True, verbose_name="hinge_c2"),
                ),
                (
                    "top_sliding_hinge_d2",
                    models.IntegerField(blank=True, null=True, verbose_name="hinge_d2"),
                ),
                (
                    "top_hole_position_a1",
                    models.IntegerField(blank=True, null=True, verbose_name="a1"),
                ),
                (
                    "top_hole_position_a2",
                    models.IntegerField(blank=True, null=True, verbose_name="a2"),
                ),
                (
                    "top_hole_position_b1",
                    models.IntegerField(blank=True, null=True, verbose_name="b1"),
                ),
                (
                    "top_hole_position_b2",
                    models.IntegerField(blank=True, null=True, verbose_name="b2"),
                ),
                (
                    "bottom_hole_type",
                    models.IntegerField(
                        choices=[(0, "固定铰支座"), (1, "滑动铰支座")],
                        default=0,
                        verbose_name="底端孔洞类型",
                    ),
                ),
                (
                    "bottom_fix_hinge_c1",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="fix_hinge_c1"
                    ),
                ),
                (
                    "bottom_fix_hinge_d1",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="fix_hinge_d1"
                    ),
                ),
                (
                    "bottom_fix_hinge_e1",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="fix_hinge_e1"
                    ),
                ),
                (
                    "bottom_fix_hinge_f1",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="fix_hinge_f1"
                    ),
                ),
                (
                    "bottom_fix_hinge_h1",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="fix_hinge_h1"
                    ),
                ),
                (
                    "bottom_sliding_hinge_c2",
                    models.IntegerField(blank=True, null=True, verbose_name="hinge_c2"),
                ),
                (
                    "bottom_sliding_hinge_d2",
                    models.IntegerField(blank=True, null=True, verbose_name="hinge_d2"),
                ),
                (
                    "bottom_hole_position_a1",
                    models.IntegerField(blank=True, null=True, verbose_name="a1"),
                ),
                (
                    "bottom_hole_position_a2",
                    models.IntegerField(blank=True, null=True, verbose_name="a2"),
                ),
                (
                    "bottom_hole_position_b1",
                    models.IntegerField(blank=True, null=True, verbose_name="b1"),
                ),
                (
                    "bottom_hole_position_b2",
                    models.IntegerField(blank=True, null=True, verbose_name="b2"),
                ),
                (
                    "top_joint_a",
                    models.IntegerField(blank=True, null=True, verbose_name="a"),
                ),
                (
                    "top_joint_b",
                    models.IntegerField(blank=True, null=True, verbose_name="b"),
                ),
                (
                    "top_joint_c",
                    models.IntegerField(blank=True, null=True, verbose_name="c"),
                ),
                (
                    "bottom_joint_a",
                    models.IntegerField(blank=True, null=True, verbose_name="a"),
                ),
                (
                    "bottom_joint_b",
                    models.IntegerField(blank=True, null=True, verbose_name="b"),
                ),
                (
                    "bottom_joint_c",
                    models.IntegerField(blank=True, null=True, verbose_name="c"),
                ),
                (
                    "step_slot_a",
                    models.IntegerField(blank=True, null=True, verbose_name="a"),
                ),
                (
                    "step_slot_b",
                    models.IntegerField(blank=True, null=True, verbose_name="b"),
                ),
                (
                    "step_slot_c",
                    models.IntegerField(blank=True, null=True, verbose_name="c"),
                ),
                (
                    "step_slot_d",
                    models.IntegerField(blank=True, null=True, verbose_name="d"),
                ),
                (
                    "step_slot_e",
                    models.IntegerField(blank=True, null=True, verbose_name="e"),
                ),
                (
                    "step_slot_position_c1",
                    models.IntegerField(blank=True, null=True, verbose_name="c1"),
                ),
                (
                    "step_slot_position_c2",
                    models.IntegerField(blank=True, null=True, verbose_name="c2"),
                ),
                (
                    "step_slot_position_c3",
                    models.IntegerField(blank=True, null=True, verbose_name="c3"),
                ),
                (
                    "water_drip_layout",
                    models.IntegerField(
                        choices=[(0, "只顶端"), (1, "只底端"), (2, "顶端和底端")],
                        default=2,
                        verbose_name="位置布局",
                    ),
                ),
                (
                    "water_drip_shape",
                    models.IntegerField(
                        choices=[(1, "半圆"), (0, "梯形")], default=0, verbose_name="截面"
                    ),
                ),
                (
                    "water_drip_semicircle_a",
                    models.FloatField(blank=True, null=True, verbose_name="a"),
                ),
                (
                    "water_drip_semicircle_b",
                    models.FloatField(blank=True, null=True, verbose_name="b"),
                ),
                (
                    "water_drip_trapezoid_a",
                    models.FloatField(blank=True, null=True, verbose_name="a"),
                ),
                (
                    "water_drip_trapezoid_b",
                    models.FloatField(blank=True, null=True, verbose_name="b"),
                ),
                (
                    "water_drip_trapezoid_c",
                    models.FloatField(blank=True, null=True, verbose_name="c"),
                ),
                (
                    "water_drip_position_a1",
                    models.FloatField(blank=True, null=True, verbose_name="a1"),
                ),
                (
                    "water_drip_position_a2",
                    models.FloatField(blank=True, null=True, verbose_name="a2"),
                ),
                (
                    "water_drip_position_a3",
                    models.FloatField(blank=True, null=True, verbose_name="a3"),
                ),
                (
                    "rebar_design_mode",
                    models.IntegerField(
                        choices=[(0, "自动"), (1, "手动")], default=0, verbose_name="钢筋设计模式"
                    ),
                ),
                (
                    "bottom_edge_longitudinal_rebar_diameter",
                    models.IntegerField(blank=True, null=True, verbose_name="直径 mm"),
                ),
                (
                    "bottom_edge_longitudinal_rebar_spacing",
                    models.IntegerField(blank=True, null=True, verbose_name="间距 mm"),
                ),
                (
                    "top_edge_longitudinal_rebar_diameter",
                    models.IntegerField(blank=True, null=True, verbose_name="直径 mm"),
                ),
                (
                    "top_edge_longitudinal_rebar_spacing",
                    models.IntegerField(blank=True, null=True, verbose_name="间距 mm"),
                ),
                (
                    "bottom_edge_stirrup_diameter",
                    models.IntegerField(blank=True, null=True, verbose_name="直径 mm"),
                ),
                (
                    "bottom_edge_stirrup_spacing",
                    models.IntegerField(blank=True, null=True, verbose_name="间距 mm"),
                ),
                (
                    "top_edge_stirrup_diameter",
                    models.IntegerField(blank=True, null=True, verbose_name="直径 mm"),
                ),
                (
                    "top_edge_stirrup_spacing",
                    models.IntegerField(blank=True, null=True, verbose_name="间距 mm"),
                ),
                (
                    "hole_reinforce_rebar_diameter",
                    models.IntegerField(blank=True, null=True, verbose_name="直径 mm"),
                ),
                (
                    "hoisting_reinforce_rebar_diameter",
                    models.IntegerField(blank=True, null=True, verbose_name="直径 mm"),
                ),
                (
                    "top_edge_reinforce_rebar_diameter",
                    models.IntegerField(blank=True, null=True, verbose_name="直径 mm"),
                ),
                (
                    "bottom_edge_reinforce_rebar_diameter",
                    models.IntegerField(blank=True, null=True, verbose_name="直径 mm"),
                ),
                (
                    "hoist_design_mode",
                    models.IntegerField(
                        choices=[(0, "自动"), (1, "手动")], default=1, verbose_name="埋件孔洞设计"
                    ),
                ),
                (
                    "demold_design_mode",
                    models.IntegerField(
                        choices=[(0, "自动"), (1, "手动")],
                        default=0,
                        verbose_name="DemoldDesignMode",
                    ),
                ),
                (
                    "rail_design_mode",
                    models.IntegerField(
                        choices=[
                            (1, "手动"),
                            (stair_detailed.models.RailDesignMode["NO"], "不计算"),
                        ],
                        default=1,
                        verbose_name="rail_design_mode",
                    ),
                ),
                (
                    "hoist_type",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "ANCHOR"), (0, "ROUNDING_HEAD")],
                        null=True,
                        verbose_name="吊装预埋件类型",
                    ),
                ),
                (
                    "hoist_position_a",
                    models.IntegerField(blank=True, null=True, verbose_name="a"),
                ),
                (
                    "hoist_position_b",
                    models.IntegerField(blank=True, null=True, verbose_name="b"),
                ),
                (
                    "hoist_position_c",
                    models.FloatField(blank=True, null=True, verbose_name="c"),
                ),
                (
                    "hoist_position_d",
                    models.FloatField(blank=True, null=True, verbose_name="d"),
                ),
                (
                    "hoist_name",
                    models.CharField(
                        default="DJ-25-170",
                        max_length=64,
                        null=True,
                        verbose_name="吊装预埋件规格",
                    ),
                ),
                (
                    "pouring_way",
                    models.IntegerField(
                        choices=[(0, "立式浇筑式脱模"), (1, "立式浇筑立式脱模"), (2, "卧式浇筑卧式脱模")],
                        default=0,
                        verbose_name="脱模方式",
                    ),
                ),
                (
                    "demold_type",
                    models.IntegerField(
                        choices=[(0, "ROUNDING_HEAD"), (1, "ANCHOR"), (2, "LIFT_HOOK")],
                        default=1,
                        verbose_name="脱模类型",
                    ),
                ),
                (
                    "demold_position_a",
                    models.IntegerField(blank=True, null=True, verbose_name="a"),
                ),
                (
                    "demold_position_b",
                    models.IntegerField(blank=True, null=True, verbose_name="b"),
                ),
                (
                    "demold_position_c",
                    models.IntegerField(blank=True, null=True, verbose_name="c"),
                ),
                (
                    "demold_position_d",
                    models.IntegerField(blank=True, null=True, verbose_name="d"),
                ),
                (
                    "demold_position_t",
                    models.IntegerField(blank=True, null=True, verbose_name="t"),
                ),
                (
                    "demold_name",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="脱模预埋件规格"
                    ),
                ),
                (
                    "rail_layout",
                    models.IntegerField(
                        choices=[(0, "只右侧"), (1, "只左侧"), (2, "左+右")],
                        default=0,
                        verbose_name="栏杆预埋件布局",
                    ),
                ),
                (
                    "rail_number",
                    models.TextField(
                        blank=True, default="", null=True, verbose_name="栏杆预埋件所在的阶数"
                    ),
                ),
                (
                    "rail_position_a",
                    models.FloatField(blank=True, null=True, verbose_name="a"),
                ),
                (
                    "rail_position_b",
                    models.FloatField(blank=True, null=True, verbose_name="a"),
                ),
                (
                    "rail_name",
                    models.CharField(
                        default="M1", max_length=64, null=True, verbose_name="栏杆埋件型号"
                    ),
                ),
                (
                    "stair",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="design.modelconstructiondata",
                        verbose_name="结构参数",
                    ),
                ),
            ],
            options={
                "verbose_name": "深化设计参数",
                "verbose_name_plural": "深化设计参数",
            },
        ),
    ]
